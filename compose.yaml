services:
  app:
    build:
      target: ${APP_BUILD_TARGET:-local}
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    ports:
      - ${APP_PORT-9000}:9000
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      target: ${APP_BUILD_TARGET:-local}
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - ${WEB_PUBLISHED_PORT:-80}:8080
    volumes:
      - ./public:/var/www/html
    develop:
      watch:
        - action: sync+restart
          path: ./docker/nginx/default.conf
          target: /etc/nginx/conf.d/default.conf
        - action: sync+restart
          path: ./docker/nginx/nginx.conf
          target: /etc/nginx/nginx.conf
    depends_on:
      app:
        condition: service_started

  db:
    image: postgres:17.2-bullseye
    user: postgres
    ports:
      - ${DB_PORT-5432}:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME:-car_bike_auction}
      - POSTGRES_DB=${DB_DATABASE:-car_bike_auction_local}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 5

volumes:
  db-data:
